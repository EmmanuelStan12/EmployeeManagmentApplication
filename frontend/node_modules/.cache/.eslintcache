[{"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/index.js":"1","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/App.js":"2","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/FooterComponent.js":"3","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/AddEmployeeComponent.js":"4","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/ListEmployeeComponent.js":"5","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/HeaderComponent.js":"6","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/services/EmployeeService.js":"7"},{"size":316,"mtime":1709241647690,"results":"8","hashOfConfig":"9"},{"size":967,"mtime":1709127490512,"results":"10","hashOfConfig":"9"},{"size":295,"mtime":1709127490512,"results":"11","hashOfConfig":"9"},{"size":4562,"mtime":1709127490512,"results":"12","hashOfConfig":"9"},{"size":2349,"mtime":1709127490512,"results":"13","hashOfConfig":"9"},{"size":517,"mtime":1709127490512,"results":"14","hashOfConfig":"9"},{"size":711,"mtime":1709127490516,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5aeg3",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/index.js",[],"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/App.js",[],"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/FooterComponent.js",[],"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/AddEmployeeComponent.js",["31"],"import React, {useState, useEffect} from 'react'\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport EmployeeService from '../services/EmployeeService'\n\nconst AddEmployeeComponent = () => {\n\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [emailId, setEmailId] = useState('')\n    const history = useHistory();\n    const {id} = useParams();\n\n    const saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n\n        const employee = {firstName, lastName, emailId}\n\n        if(id){\n            EmployeeService.updateEmployee(id, employee).then((response) => {\n                history.push('/employees')\n            }).catch(error => {\n                console.log(error)\n            })\n\n        }else{\n            EmployeeService.createEmployee(employee).then((response) =>{\n\n                console.log(response.data)\n    \n                history.push('/employees');\n    \n            }).catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n\n    useEffect(() => {\n\n        EmployeeService.getEmployeeById(id).then((response) =>{\n            setFirstName(response.data.firstName)\n            setLastName(response.data.lastName)\n            setEmailId(response.data.emailId)\n        }).catch(error => {\n            console.log(error)\n        })\n    }, [])\n\n    const title = () => {\n\n        if(id){\n            return <h2 className = \"text-center\">Update Employee</h2>\n        }else{\n            return <h2 className = \"text-center\">Add Employee</h2>\n        }\n    }\n\n    return (\n        <div>\n           <br /><br />\n           <div className = \"container\">\n                <div className = \"row\">\n                    <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                       {\n                           title()\n                       }\n                        <div className = \"card-body\">\n                            <form>\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> First Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter first name\"\n                                        name = \"firstName\"\n                                        className = \"form-control\"\n                                        value = {firstName}\n                                        onChange = {(e) => setFirstName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Last Name :</label>\n                                    <input\n                                        type = \"text\"\n                                        placeholder = \"Enter last name\"\n                                        name = \"lastName\"\n                                        className = \"form-control\"\n                                        value = {lastName}\n                                        onChange = {(e) => setLastName(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <div className = \"form-group mb-2\">\n                                    <label className = \"form-label\"> Email Id :</label>\n                                    <input\n                                        type = \"email\"\n                                        placeholder = \"Enter email Id\"\n                                        name = \"emailId\"\n                                        className = \"form-control\"\n                                        value = {emailId}\n                                        onChange = {(e) => setEmailId(e.target.value)}\n                                    >\n                                    </input>\n                                </div>\n\n                                <button className = \"btn btn-success\" onClick = {(e) => saveOrUpdateEmployee(e)} >Submit </button>\n                                <Link to=\"/employees\" className=\"btn btn-danger\"> Cancel </Link>\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n\n           </div>\n\n        </div>\n    )\n}\n\nexport default AddEmployeeComponent\n","/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/ListEmployeeComponent.js",[],"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/components/HeaderComponent.js",[],"/home/emmanuel-stanley/Documents/Projects/Spring/EmployeeManagementApplication/frontend/src/services/EmployeeService.js",[],{"ruleId":"32","severity":1,"message":"33","line":48,"column":8,"nodeType":"34","endLine":48,"endColumn":10,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [id]",{"range":"39","text":"40"},[1371,1373],"[id]"]